version "4.3"

class SpawningHandler : EventHandler
{
	override void CheckReplacement(ReplaceEvent e)
	{
		e.IsFinal = true;
		cvar mode = CVar.FindCVar('vd_spawnmode');
		cvar irreg = CVar.FindCVar('vd_irregulator');
		
		switch(mode.GetInt())
		{
			case 0:		// Off
				return;
				break;
			
			case 1:		// Same tier enemy and ammo spawns
				// Prevent randomization of bosses in ExM8 maps.
				if((level.mapname ~== "E1M8") && (e.Replacee == 'BaronOfHell'))
				{ return; }

				if(((level.mapname ~== "E2M8") || (level.mapname ~== "E4M6")) && (e.Replacee == 'Cyberdemon'))
				{ return; }

				if(((level.mapname ~== "E3M8") || (level.mapname ~== "E4M8")) && (e.Replacee == 'SpiderMastermind'))
				{ return; }
				
				else if(e.Replacee == 'ZombieMan' ||
				e.Replacee == 'ShotgunGuy' ||
				e.Replacee == 'DoomImp')
				{
					switch(random[Replacement](0,2))
					{
					case 0:
						e.Replacement = 'FixedZombieMan';
						break;
					case 1:
						e.Replacement = 'FixedShotgunGuy';
						break;
					case 2:
						e.Replacement = 'DoomImp';
						break;
					}
				}
					
				else if(e.Replacee == 'Demon' ||
				e.Replacee == 'Spectre' ||
				e.Replacee == 'LostSoul')
				{
					switch(random[Replacement](0,2))
					{
					case 0:
						e.Replacement = 'Demon';
						break;
					case 1:
						e.Replacement = 'Spectre';
						break;
					case 2:
						e.Replacement = 'LostSoul';
						break;
					}
				}
				
				else if(e.Replacee == 'Cacodemon' ||
				e.Replacee == 'BaronOfHell' )
				{
					switch(random[Replacement](0,1))
					{
					case 0:
						e.Replacement = 'BaronOfHell';
						break;
					case 1:
						e.Replacement = 'Cacodemon';
						break;
					}
				}
	
				else if(e.Replacee == 'Cyberdemon' ||
				e.Replacee == 'SpiderMastermind')
				{
					switch(random[Replacement](0,1))
					{
					case 0:
						e.Replacement = 'Cyberdemon';
						break;
					case 1:
						e.Replacement = 'SpiderMastermind';
						break;
					}
				}
				
				else if(e.Replacee == 'Clip' ||
				e.Replacee == 'Shell' ||
				e.Replacee == 'RocketAmmo' ||
				e.Replacee == 'Cell')
				{
					switch(random[Replacement](0,3))
					{
					case 0:
						e.Replacement = 'Clip';
						break;
					case 1:
						e.Replacement = 'Shell';
						break;
					case 2:
						e.Replacement = 'RocketAmmo';
						break;
					case 3:
						e.Replacement = 'Cell';
						break;
					}
				}
					
				else if(e.Replacee == 'ClipBox' ||
				e.Replacee == 'ShellBox' ||
				e.Replacee == 'RocketBox' ||
				e.Replacee == 'CellPack')
				{
					switch(random[Replacement](0,3))
					{
					case 0:
						e.Replacement = 'ClipBox';
						break;
					case 1:
						e.Replacement = 'ShellBox';
						break;
					case 2:
						e.Replacement = 'RocketBox';
						break;
					case 3:
						e.Replacement = 'CellPack';
						break;
					}
				}
					
				else if(e.Replacee == 'Chainsaw' ||
				e.Replacee == 'Shotgun' ||
				e.Replacee == 'Chaingun' ||
				e.Replacee == 'RocketLauncher' ||
				e.Replacee == 'PlasmaRifle' ||
				e.Replacee == 'BFG9000')
				{
					switch(random[Replacement](0,5))
					{
					case 0:
						e.Replacement = 'Chainsaw';
						break;
					case 1:
						e.Replacement = 'Shotgun';
						break;
					case 2:
						e.Replacement = 'Chaingun';
						break;
					case 3:
						e.Replacement = 'FixedRLSpawner';
						break;
					case 4:
						e.Replacement = 'PlasmaRifle';
						break;
					case 5:
						e.Replacement = 'BFG9000';
						break;
					}
				}
					
				else if(e.Replacee == 'HealthBonus' ||
				e.Replacee == 'ArmorBonus')
				{
					switch(random[Replacement](0,1))
					{
					case 0:
						e.Replacement = 'HealthBonus';
						break;
					case 1:
						e.Replacement = 'ArmorBonus';
						break;
					}
				}
				
				else if(e.Replacee == 'Stimpack' ||
				e.Replacee == 'Medikit')
				{
					switch(random[Replacement](0,1))
					{
					case 0:
						e.Replacement = 'Stimpack';
						break;
					case 1:
						e.Replacement = 'Medikit';
						break;
					}
				}
					
				else if(e.Replacee == 'GreenArmor' ||
				e.Replacee == 'BlueArmor')
				{
					switch(random[Replacement](0,1))
					{
					case 0:
						e.Replacement = 'GreenArmor';
						break;
					case 1:
						e.Replacement = 'BlueArmor';
						break;
					}
				}
					
				else if(e.Replacee == 'Allmap' ||
				e.Replacee == 'BlurSphere' ||
				e.Replacee == 'Berserk' ||
				e.Replacee == 'Infrared' ||
				e.Replacee == 'InvulnerabilitySphere' ||
				e.Replacee == 'RadSuit' ||
				e.Replacee == 'Soulsphere' ||
				e.Replacee == 'Backpack')
				{
					switch(random[Replacement](0,7))
					{
					case 0:
						e.Replacement = 'Allmap';
						break;
					case 1:
						e.Replacement = 'BlurSphere';
						break;
					case 2:
						e.Replacement = 'Berserk';
						break;
					case 3:
						e.Replacement = 'Infrared';
						break;
					case 4:
						e.Replacement = 'InvulnerabilitySphere';
						break;
					case 5:
						e.Replacement = 'RadSuit';
						break;
					case 6:
						e.Replacement = 'Soulsphere';
						break;
					case 7:
						e.Replacement = 'Backpack';
						break;
					}
				}
					
				if(e.Replacee == 'BigTree' || e.Replacee == 'BlueTorch' ||
				e.Replacee == 'Candelabra' || e.Replacee == 'Candlestick' ||
				e.Replacee == 'EvilEye' || e.Replacee == 'FloatingSkull' ||
				e.Replacee == 'GreenTorch' || e.Replacee == 'HeadCandles' ||
				e.Replacee == 'HeadOnAStick' || e.Replacee == 'HeadsOnAStick' ||
				e.Replacee == 'HeartColumn' || e.Replacee == 'RedTorch' ||
				e.Replacee == 'ShortBlueTorch' || e.Replacee == 'ShortGreenTorch'||
				e.Replacee == 'ShortRedTorch' || e.Replacee == 'ShortGreenColumn' ||
				e.Replacee == 'ShortRedColumn' || e.Replacee == 'SkullColumn' ||
				e.Replacee == 'Stalagtite' || e.Replacee == 'TallGreenColumn' ||
				e.Replacee == 'TallRedColumn' || e.Replacee == 'TorchTree' ||
				e.Replacee == 'DeadCacodemon' || e.Replacee == 'DeadDemon' ||
				e.Replacee == 'DeadDoomImp' || e.Replacee == 'DeadLostSoul' ||
				e.Replacee == 'DeadMarine' || e.Replacee == 'DeadShotgunGuy' ||
				e.Replacee == 'DeadZombieMan' || e.Replacee == 'GibbedMarine' ||
				e.Replacee == 'GibbedMarineExtra' || e.Replacee == 'Column' ||
				e.Replacee == 'ExplosiveBarrel' || e.Replacee == 'BurningBarrel' ||
				e.Replacee == 'TechPillar' || e.Replacee == 'BloodyTwitch' ||
				e.Replacee == 'DeadStick' || e.Replacee == 'Gibs' ||
				e.Replacee == 'LiveStick' || e.Replacee == 'Meat2' ||
				e.Replacee == 'Meat3' || e.Replacee == 'Meat4' ||
				e.Replacee == 'Meat5' || e.Replacee == 'NonsolidMeat2' ||
				e.Replacee == 'NonsolidMeat3' || e.Replacee == 'NonsolidMeat4' ||
				e.Replacee == 'NonsolidMeat5' || e.Replacee == 'NonsolidTwitch')
				{
					switch(random[Replacement](0,47))
					{
					case 0:
						e.Replacement = 'BigTree';
						break;
					case 1:
						e.Replacement = 'BlueTorch';
						break;
					case 2:
						e.Replacement = 'Candelabra';
						break;
					case 3:
						e.Replacement = 'Candlestick';
						break;
					case 4:
						e.Replacement = 'EvilEye';
						break;
					case 5:
						e.Replacement = 'FloatingSkull';
						break;
					case 6:
						e.Replacement = 'GreenTorch';
						break;
					case 7:
						e.Replacement = 'HeadCandles';
						break;
					case 8:
						e.Replacement = 'HeadOnAStick';
						break;
					case 9:
						e.Replacement = 'HeadsOnAStick';
						break;
					case 10:
						e.Replacement = 'HeartColumn';
						break;
					case 11:
						e.Replacement = 'RedTorch';
						break;
					case 12:
						e.Replacement = 'ShortBlueTorch';
						break;
					case 13:
						e.Replacement = 'ShortGreenTorch';
						break;
					case 14:
						e.Replacement = 'ShortRedTorch';
						break;
					case 15:
						e.Replacement = 'ShortGreenColumn';
						break;
					case 16:
						e.Replacement = 'ShortRedColumn';
						break;
					case 17:
						e.Replacement = 'SkullColumn';
						break;
					case 18:
						e.Replacement = 'Stalagtite';
						break;
					case 19:
						e.Replacement = 'TallGreenColumn';
						break;
					case 20:
						e.Replacement = 'TallRedColumn';
						break;
					case 21:
						e.Replacement = 'TorchTree';
						break;
					case 22:
						e.Replacement = 'DeadCacodemon';
						break;
					case 23:
						e.Replacement = 'DeadDemon';
						break;
					case 24:
						e.Replacement = 'DeadDoomImp';
						break;
					case 25:
						e.Replacement = 'DeadLostSoul';
						break;
					case 26:
						e.Replacement = 'DeadMarine';
						break;
					case 27:
						e.Replacement = 'DeadShotgunGuy';
						break;
					case 28:
						e.Replacement = 'DeadZombieMan';
						break;
					case 29:
						e.Replacement = 'GibbedMarine';
						break;
					case 30:
						e.Replacement = 'GibbedMarineExtra';
						break;
					case 31:
						e.Replacement = 'Column';
						break;
					case 32:
						e.Replacement = 'ExplosiveBarrel';
						break;
					case 33:
						e.Replacement = 'BurningBarrel';
						break;
					case 34:
						e.Replacement = 'TechPillar';
						break;
					case 35:
						e.Replacement = 'BloodyTwitch';
						break;
					case 36:
						e.Replacement = 'DeadStick';
						break;
					case 37:
						e.Replacement = 'Gibs';
						break;
					case 38:
						e.Replacement = 'LiveStick';
						break;
					case 39:
						e.Replacement = 'Meat2';
						break;
					case 40:
						e.Replacement = 'Meat3';
						break;
					case 41:
						e.Replacement = 'Meat4';
						break;
					case 42:
						e.Replacement = 'Meat5';
						break;
					case 43:
						e.Replacement = 'NonsolidMeat2';
						break;
					case 44:
						e.Replacement = 'NonsolidMeat3';
						break;
					case 45:
						e.Replacement = 'NonsolidMeat4';
						break;
					case 46:
						e.Replacement = 'NonsolidMeat5';
						break;
					case 47:
						e.Replacement = 'NonsolidTwitch';
						break;
					}
				}
				
				break;
					
			case 2:		// All enemy and ammo spawns
				if((level.mapname ~== "E1M8") && (e.Replacee == 'BaronOfHell'))
				{ return; }

				if(((level.mapname ~== "E2M8") || (level.mapname ~== "E4M6")) && (e.Replacee == 'Cyberdemon'))
				{ return; }

				if(((level.mapname ~== "E3M8") || (level.mapname ~== "E4M8")) && (e.Replacee == 'SpiderMastermind'))
				{ return; }
				
				else if(e.Replacee == 'ZombieMan' || e.Replacee == 'ShotgunGuy' || e.Replacee == 'DoomImp' ||
				e.Replacee == 'LostSoul' || e.Replacee == 'Demon' || e.Replacee == 'Spectre' ||
				e.Replacee == 'Cacodemon' || e.Replacee == 'BaronOfHell' ||
				e.Replacee == 'Cyberdemon' || e.Replacee == 'SpiderMastermind')
				{
					switch(random[Replacement](0,16))
					{
					case 0:
					case 1:
						e.Replacement = 'FixedZombieMan';
						break;
					case 2:
					case 3:
						e.Replacement = 'FixedShotgunGuy';
						break;
					case 4:
					case 5:
						e.Replacement = 'DoomImp';
						break;
					case 6:
					case 7:
						e.Replacement = 'LostSoul';
						break;
					case 8:
					case 9:
						e.Replacement = 'Demon';
						break;
					case 10:
					case 11:
						e.Replacement = 'Spectre';
						break;
					case 12:
					case 13:
						e.Replacement = 'Cacodemon';
						break;
					case 14:
						e.Replacement = 'BaronOfHell';
						break;
					case 15:
						e.Replacement = 'Cyberdemon';
						break;
					case 16:
						e.Replacement = 'SpiderMastermind';
						break;
					}
				}
				
				else if(e.Replacee == 'Clip' || e.Replacee == 'Shell' ||
				e.Replacee == 'RocketAmmo' || e.Replacee == 'Cell' ||
				e.Replacee == 'ClipBox' || e.Replacee == 'ShellBox' ||
				e.Replacee == 'RocketBox' || e.Replacee == 'CellPack')
				{
					switch(random[Replacement](0,7))
					{
					case 0:
						e.Replacement = 'Clip';
						break;
					case 1:
						e.Replacement = 'Shell';
						break;
					case 2:
						e.Replacement = 'RocketAmmo';
						break;
					case 3:
						e.Replacement = 'Cell';
						break;
					case 4:
						e.Replacement = 'ClipBox';
						break;
					case 5:
						e.Replacement = 'ShellBox';
						break;
					case 6:
						e.Replacement = 'RocketBox';
						break;
					case 7:
						e.Replacement = 'CellPack';
						break;
					}
				}
				
				else if(e.Replacee == 'Chainsaw' || e.Replacee == 'Shotgun' ||e.Replacee == 'Chaingun' ||
				e.Replacee == 'RocketLauncher' || e.Replacee == 'PlasmaRifle' || e.Replacee == 'BFG9000')
				{
					switch(random[Replacement](0,5))
					{
					case 0:
						e.Replacement = 'Chainsaw';
						break;
					case 1:
						e.Replacement = 'Shotgun';
						break;
					case 2:
						e.Replacement = 'Chaingun';
						break;
					case 3:
						e.Replacement = 'FixedRLSpawner';
						break;
					case 4:
						e.Replacement = 'PlasmaRifle';
						break;
					case 5:
						e.Replacement = 'BFG9000';
						break;
					}
				}
					
				else if(e.Replacee == 'HealthBonus' ||
				e.Replacee == 'ArmorBonus')
				{
					switch(random[Replacement](0,1))
					{
					case 0:
						e.Replacement = 'HealthBonus';
						break;
					case 1:
						e.Replacement = 'ArmorBonus';
						break;
					}
				}
				
				else if(e.Replacee == 'Stimpack' ||
				e.Replacee == 'Medikit')
				{
					switch(random[Replacement](0,1))
					{
					case 0:
						e.Replacement = 'Stimpack';
						break;
					case 1:
						e.Replacement = 'Medikit';
						break;
					}
				}
					
				else if(e.Replacee == 'GreenArmor' ||
				e.Replacee == 'BlueArmor')
				{
					switch(random[Replacement](0,1))
					{
					case 0:
						e.Replacement = 'GreenArmor';
						break;
					case 1:
						e.Replacement = 'BlueArmor';
						break;
					}
				}
					
				else if(e.Replacee == 'Allmap' || e.Replacee == 'BlurSphere' ||
				e.Replacee == 'Berserk' || e.Replacee == 'Infrared' ||
				e.Replacee == 'InvulnerabilitySphere' || e.Replacee == 'RadSuit' ||
				e.Replacee == 'Soulsphere' || e.Replacee == 'Backpack')
				{
					switch(random[Replacement](0,7))
					{
					case 0:
						e.Replacement = 'Allmap';
						break;
					case 1:
						e.Replacement = 'BlurSphere';
						break;
					case 2:
						e.Replacement = 'Berserk';
						break;
					case 3:
						e.Replacement = 'Infrared';
						break;
					case 4:
						e.Replacement = 'InvulnerabilitySphere';
						break;
					case 5:
						e.Replacement = 'RadSuit';
						break;
					case 6:
						e.Replacement = 'Soulsphere';
						break;
					case 7:
						e.Replacement = 'Backpack';
						break;
					}
				}
					
				if(e.Replacee == 'BigTree' || e.Replacee == 'BlueTorch' ||
				e.Replacee == 'Candelabra' || e.Replacee == 'Candlestick' ||
				e.Replacee == 'EvilEye' || e.Replacee == 'FloatingSkull' ||
				e.Replacee == 'GreenTorch' || e.Replacee == 'HeadCandles' ||
				e.Replacee == 'HeadOnAStick' || e.Replacee == 'HeadsOnAStick' ||
				e.Replacee == 'HeartColumn' || e.Replacee == 'RedTorch' ||
				e.Replacee == 'ShortBlueTorch' || e.Replacee == 'ShortGreenTorch'||
				e.Replacee == 'ShortRedTorch' || e.Replacee == 'ShortGreenColumn' ||
				e.Replacee == 'ShortRedColumn' || e.Replacee == 'SkullColumn' ||
				e.Replacee == 'Stalagtite' || e.Replacee == 'TallGreenColumn' ||
				e.Replacee == 'TallRedColumn' || e.Replacee == 'TorchTree' ||
				e.Replacee == 'DeadCacodemon' || e.Replacee == 'DeadDemon' ||
				e.Replacee == 'DeadDoomImp' || e.Replacee == 'DeadLostSoul' ||
				e.Replacee == 'DeadMarine' || e.Replacee == 'DeadShotgunGuy' ||
				e.Replacee == 'DeadZombieMan' || e.Replacee == 'GibbedMarine' ||
				e.Replacee == 'GibbedMarineExtra' || e.Replacee == 'Column' ||
				e.Replacee == 'ExplosiveBarrel' || e.Replacee == 'BurningBarrel' ||
				e.Replacee == 'TechPillar' || e.Replacee == 'BloodyTwitch' ||
				e.Replacee == 'DeadStick' || e.Replacee == 'Gibs' ||
				e.Replacee == 'LiveStick' || e.Replacee == 'Meat2' ||
				e.Replacee == 'Meat3' || e.Replacee == 'Meat4' ||
				e.Replacee == 'Meat5' || e.Replacee == 'NonsolidMeat2' ||
				e.Replacee == 'NonsolidMeat3' || e.Replacee == 'NonsolidMeat4' ||
				e.Replacee == 'NonsolidMeat5' || e.Replacee == 'NonsolidTwitch')
				{
					switch(random[Replacement](0,47))
					{
					case 0:
						e.Replacement = 'BigTree';
						break;
					case 1:
						e.Replacement = 'BlueTorch';
						break;
					case 2:
						e.Replacement = 'Candelabra';
						break;
					case 3:
						e.Replacement = 'Candlestick';
						break;
					case 4:
						e.Replacement = 'EvilEye';
						break;
					case 5:
						e.Replacement = 'FloatingSkull';
						break;
					case 6:
						e.Replacement = 'GreenTorch';
						break;
					case 7:
						e.Replacement = 'HeadCandles';
						break;
					case 8:
						e.Replacement = 'HeadOnAStick';
						break;
					case 9:
						e.Replacement = 'HeadsOnAStick';
						break;
					case 10:
						e.Replacement = 'HeartColumn';
						break;
					case 11:
						e.Replacement = 'RedTorch';
						break;
					case 12:
						e.Replacement = 'ShortBlueTorch';
						break;
					case 13:
						e.Replacement = 'ShortGreenTorch';
						break;
					case 14:
						e.Replacement = 'ShortRedTorch';
						break;
					case 15:
						e.Replacement = 'ShortGreenColumn';
						break;
					case 16:
						e.Replacement = 'ShortRedColumn';
						break;
					case 17:
						e.Replacement = 'SkullColumn';
						break;
					case 18:
						e.Replacement = 'Stalagtite';
						break;
					case 19:
						e.Replacement = 'TallGreenColumn';
						break;
					case 20:
						e.Replacement = 'TallRedColumn';
						break;
					case 21:
						e.Replacement = 'TorchTree';
						break;
					case 22:
						e.Replacement = 'DeadCacodemon';
						break;
					case 23:
						e.Replacement = 'DeadDemon';
						break;
					case 24:
						e.Replacement = 'DeadDoomImp';
						break;
					case 25:
						e.Replacement = 'DeadLostSoul';
						break;
					case 26:
						e.Replacement = 'DeadMarine';
						break;
					case 27:
						e.Replacement = 'DeadShotgunGuy';
						break;
					case 28:
						e.Replacement = 'DeadZombieMan';
						break;
					case 29:
						e.Replacement = 'GibbedMarine';
						break;
					case 30:
						e.Replacement = 'GibbedMarineExtra';
						break;
					case 31:
						e.Replacement = 'Column';
						break;
					case 32:
						e.Replacement = 'ExplosiveBarrel';
						break;
					case 33:
						e.Replacement = 'BurningBarrel';
						break;
					case 34:
						e.Replacement = 'TechPillar';
						break;
					case 35:
						e.Replacement = 'BloodyTwitch';
						break;
					case 36:
						e.Replacement = 'DeadStick';
						break;
					case 37:
						e.Replacement = 'Gibs';
						break;
					case 38:
						e.Replacement = 'LiveStick';
						break;
					case 39:
						e.Replacement = 'Meat2';
						break;
					case 40:
						e.Replacement = 'Meat3';
						break;
					case 41:
						e.Replacement = 'Meat4';
						break;
					case 42:
						e.Replacement = 'Meat5';
						break;
					case 43:
						e.Replacement = 'NonsolidMeat2';
						break;
					case 44:
						e.Replacement = 'NonsolidMeat3';
						break;
					case 45:
						e.Replacement = 'NonsolidMeat4';
						break;
					case 46:
						e.Replacement = 'NonsolidMeat5';
						break;
					case 47:
						e.Replacement = 'NonsolidTwitch';
						break;
					}
				}
				
				break;
				
			case 3:		// TOTAL FUCKING CHAOS
				if((level.mapname ~== "E1M8") && (e.Replacee == 'BaronOfHell'))
				{ return; }

				if(((level.mapname ~== "E2M8") || (level.mapname ~== "E4M6")) && (e.Replacee == 'Cyberdemon'))
				{ return; }

				if(((level.mapname ~== "E3M8") || (level.mapname ~== "E4M8")) && (e.Replacee == 'SpiderMastermind'))
				{ return; }
				
				else if(e.Replacee == 'ZombieMan' || e.Replacee == 'ShotgunGuy' ||
				e.Replacee == 'DoomImp' || e.Replacee == 'LostSoul' ||
				e.Replacee == 'Demon' || e.Replacee == 'Spectre' ||
				e.Replacee == 'Cacodemon' || e.Replacee == 'BaronOfHell' ||
				e.Replacee == 'Cyberdemon' || e.Replacee == 'SpiderMastermind' ||
				e.Replacee == 'Clip' || e.Replacee == 'Shell' || e.Replacee == 'RocketAmmo' || e.Replacee == 'Cell' ||
				e.Replacee == 'ClipBox' || e.Replacee == 'ShellBox' || e.Replacee == 'RocketBox' || e.Replacee == 'CellPack' ||
				e.Replacee == 'Backpack' || e.Replacee == 'Chainsaw' || e.Replacee == 'Shotgun' || e.Replacee == 'Chaingun' ||
				e.Replacee == 'RocketLauncher' || e.Replacee == 'PlasmaRifle' || e.Replacee == 'BFG9000' ||
				e.Replacee == 'HealthBonus' || e.Replacee == 'Stimpack' || e.Replacee == 'Medikit' ||
				e.Replacee == 'ArmorBonus' || e.Replacee == 'GreenArmor' || e.Replacee == 'BlueArmor' ||
				e.Replacee == 'Allmap' || e.Replacee == 'BlurSphere' || e.Replacee == 'Berserk' || e.Replacee == 'Infrared' ||
				e.Replacee == 'InvulnerabilitySphere' || e.Replacee == 'RadSuit' || e.Replacee == 'Soulsphere' ||
				e.Replacee == 'BigTree' || e.Replacee == 'BlueTorch' || e.Replacee == 'Candelabra' || e.Replacee == 'Candlestick' ||
				e.Replacee == 'EvilEye' || e.Replacee == 'FloatingSkull' || e.Replacee == 'GreenTorch' || e.Replacee == 'HeadCandles' ||
				e.Replacee == 'HeadOnAStick' || e.Replacee == 'HeadsOnAStick' || e.Replacee == 'HeartColumn' || e.Replacee == 'RedTorch' ||
				e.Replacee == 'ShortBlueTorch' || e.Replacee == 'ShortGreenTorch' || e.Replacee == 'ShortRedTorch' || e.Replacee == 'ShortGreenColumn' ||
				e.Replacee == 'ShortRedColumn' || e.Replacee == 'SkullColumn' || e.Replacee == 'Stalagtite' || e.Replacee == 'TallGreenColumn' ||
				e.Replacee == 'TallRedColumn' || e.Replacee == 'TorchTree' || e.Replacee == 'DeadCacodemon' || e.Replacee == 'DeadDemon' ||
				e.Replacee == 'DeadDoomImp' || e.Replacee == 'DeadLostSoul' || e.Replacee == 'DeadMarine' || e.Replacee == 'DeadShotgunGuy' ||
				e.Replacee == 'DeadZombieMan' || e.Replacee == 'GibbedMarine' || e.Replacee == 'GibbedMarineExtra' || e.Replacee == 'Column' ||
				e.Replacee == 'ExplosiveBarrel' || e.Replacee == 'BurningBarrel' ||
				e.Replacee == 'TechPillar' || e.Replacee == 'BloodyTwitch' ||
				e.Replacee == 'DeadStick' || e.Replacee == 'Gibs' ||
				e.Replacee == 'LiveStick' || e.Replacee == 'Meat2' || e.Replacee == 'Meat3' || e.Replacee == 'Meat4' ||
				e.Replacee == 'Meat5' || e.Replacee == 'NonsolidMeat2' || e.Replacee == 'NonsolidMeat3' || e.Replacee == 'NonsolidMeat4' ||
				e.Replacee == 'NonsolidMeat5' || e.Replacee == 'NonsolidTwitch')
				{
					switch(random[Replacement](0,199))
					{
					case 0:
						e.Replacement = 'BigTree';
						break;
					case 1:
						e.Replacement = 'BlueTorch';
						break;
					case 2:
						e.Replacement = 'Candelabra';
						break;
					case 3:
						e.Replacement = 'Candlestick';
						break;
					case 4:
						e.Replacement = 'EvilEye';
						break;
					case 5:
						e.Replacement = 'FloatingSkull';
						break;
					case 6:
						e.Replacement = 'GreenTorch';
						break;
					case 7:
						e.Replacement = 'HeadCandles';
						break;
					case 8:
						e.Replacement = 'HeadOnAStick';
						break;
					case 9:
						e.Replacement = 'HeadsOnAStick';
						break;
					case 10:
						e.Replacement = 'HeartColumn';
						break;
					case 11:
						e.Replacement = 'RedTorch';
						break;
					case 12:
						e.Replacement = 'ShortBlueTorch';
						break;
					case 13:
						e.Replacement = 'ShortGreenTorch';
						break;
					case 14:
						e.Replacement = 'ShortRedTorch';
						break;
					case 15:
						e.Replacement = 'ShortGreenColumn';
						break;
					case 16:
						e.Replacement = 'ShortRedColumn';
						break;
					case 17:
						e.Replacement = 'SkullColumn';
						break;
					case 18:
						e.Replacement = 'Stalagtite';
						break;
					case 19:
						e.Replacement = 'TallGreenColumn';
						break;
					case 20:
						e.Replacement = 'TallRedColumn';
						break;
					case 21:
						e.Replacement = 'TorchTree';
						break;
					case 22:
						e.Replacement = 'DeadCacodemon';
						break;
					case 23:
						e.Replacement = 'DeadDemon';
						break;
					case 24:
						e.Replacement = 'DeadDoomImp';
						break;
					case 25:
						e.Replacement = 'DeadLostSoul';
						break;
					case 26:
						e.Replacement = 'DeadMarine';
						break;
					case 27:
						e.Replacement = 'DeadShotgunGuy';
						break;
					case 28:
						e.Replacement = 'DeadZombieMan';
						break;
					case 29:
						e.Replacement = 'GibbedMarine';
						break;
					case 30:
						e.Replacement = 'GibbedMarineExtra';
						break;
					case 31:
						e.Replacement = 'Column';
						break;
					case 32:
						e.Replacement = 'ExplosiveBarrel';
						break;
					case 33:
						e.Replacement = 'BurningBarrel';
						break;
					case 34:
						e.Replacement = 'TechPillar';
						break;
					case 35:
						e.Replacement = 'BloodyTwitch';
						break;
					case 36:
						e.Replacement = 'DeadStick';
						break;
					case 37:
						e.Replacement = 'Gibs';
						break;
					case 38:
						e.Replacement = 'LiveStick';
						break;
					case 39:
						e.Replacement = 'Meat2';
						break;
					case 40:
						e.Replacement = 'Meat3';
						break;
					case 41:
						e.Replacement = 'Meat4';
						break;
					case 42:
						e.Replacement = 'Meat5';
						break;
					case 43:
						e.Replacement = 'NonsolidMeat2';
						break;
					case 44:
						e.Replacement = 'NonsolidMeat3';
						break;
					case 45:
						e.Replacement = 'NonsolidMeat4';
						break;
					case 46:
						e.Replacement = 'NonsolidMeat5';
						break;
					case 47:
						e.Replacement = 'NonsolidTwitch';
						break;
					case 48:
					case 49:
					case 50:
					case 51:
					case 52:
					case 53:
					case 54:
					case 55:
					case 56:
						e.Replacement = 'FixedZombieMan';
						break;
					case 57:
					case 58:
					case 59:
					case 60:
					case 61:
					case 62:
					case 63:
					case 64:
						e.Replacement = 'FixedShotgunGuy';
						break;
					case 65:
					case 66:
					case 67:
					case 68:
					case 69:
					case 70:
					case 71:
					case 72:
						e.Replacement = 'DoomImp';
						break;
					case 73:
					case 74:
					case 75:
					case 76:
					case 77:
					case 78:
					case 79:
					case 80:
						e.Replacement = 'LostSoul';
						break;
					case 81:
					case 82:
					case 83:
					case 84:
					case 85:
					case 86:
					case 87:
					case 88:
						e.Replacement = 'Demon';
						break;
					case 89:
					case 90:
					case 91:
					case 92:
					case 93:
					case 94:
					case 95:
					case 96:
						e.Replacement = 'Spectre';
						break;
					case 97:
					case 98:
					case 99:
					case 100:
					case 101:
					case 102:
					case 103:
					case 104:
						e.Replacement = 'Cacodemon';
						break;
					case 105:
					case 106:
					case 107:
					case 108:
						e.Replacement = 'BaronOfHell';
						break;
					case 109:
					case 110:
						e.Replacement = 'Cyberdemon';
						break;
					case 111:
					case 112:
						e.Replacement = 'SpiderMastermind';
						break;
					case 113:
					case 114:
						e.Replacement = 'Clip';
						break;
					case 115:
					case 116:
						e.Replacement = 'Shell';
						break;
					case 117:
					case 118:
						e.Replacement = 'RocketAmmo';
						break;
					case 119:
					case 120:
						e.Replacement = 'Cell';
						break;
					case 121:
					case 122:
						e.Replacement = 'ClipBox';
						break;
					case 123:
					case 124:
						e.Replacement = 'ShellBox';
						break;
					case 125:
					case 126:
						e.Replacement = 'RocketBox';
						break;
					case 127:
					case 128:
						e.Replacement = 'CellPack';
						break;
					case 129:
					case 130:
						e.Replacement = 'Backpack';
						break;
					case 131:
						e.Replacement = 'Chainsaw';
						break;
					case 132:
						e.Replacement = 'Shotgun';
						break;
					case 133:
						e.Replacement = 'Chaingun';
						break;
					case 134:
						e.Replacement = 'FixedRLSpawner';
						break;
					case 135:
						e.Replacement = 'PlasmaRifle';
						break;
					case 136:
						e.Replacement = 'BFG9000';
						break;
					case 137:
					case 138:
					case 139:
					case 140:
					case 141:
					case 142:
					case 143:
					case 144:
					case 145:
					case 146:
						e.Replacement = 'HealthBonus';
						break;
					case 147:
					case 148:
					case 149:
					case 150:
					case 151:
					case 152:
					case 153:
					case 154:
					case 155:
					case 156:
						e.Replacement = 'Stimpack';
						break;
					case 157:
					case 158:
					case 159:
					case 160:
					case 161:
					case 162:
					case 163:
					case 164:
					case 165:
					case 166:
						e.Replacement = 'Medikit';
						break;
					case 167:
					case 168:
					case 169:
					case 170:
					case 171:
					case 172:
					case 173:
					case 174:
					case 175:
					case 176:
						e.Replacement = 'ArmorBonus';
						break;
					case 177:
					case 178:
					case 179:
					case 180:
					case 181:
					case 182:
					case 183:
					case 184:
						e.Replacement = 'GreenArmor';
						break;
					case 185:
					case 186:
					case 187:
					case 188:
					case 189:
					case 190:
						e.Replacement = 'BlueArmor';
						break;
					case 191:
						e.Replacement = 'Allmap';
						break;
					case 192:
						e.Replacement = 'BlurSphere';
						break;
					case 193:
						e.Replacement = 'Berserk';
						break;
					case 194:
						e.Replacement = 'Infrared';
						break;
					case 195:
						e.Replacement = 'InvulnerabilitySphere';
						break;
					case 196:
					case 197:
						e.Replacement = 'RadSuit';
						break;
					case 198:
					case 199:
						e.Replacement = 'Soulsphere';
						break;
					}
				}
				
				break;
		}

		if(irreg.GetBool() == true)
		{
			if(
				e.Replacee == 'BaronBall' || e.Replacee == 'CacodemonBall' ||
				e.Replacee == 'DoomImpBall' || e.Replacee == 'Rocket'
			) {
				switch(Random[Replacement](0,3))
				{
				case 0:
					e.Replacement = 'BaronBall';
					break;
				case 1:
					e.Replacement = 'CacodemonBall';
					break;
				case 2:
					e.Replacement = 'DoomImpBall';
					break;
				case 3:
					e.Replacement = 'Rocket';
					break;
				}
			}
		}
	}
}

class FixedZombieMan : ZombieMan
{
	Default { DropItem "DroppedClip"; }
}

class FixedShotgunGuy : ShotgunGuy
{
	Default { DropItem "DroppedShotgun"; }
}

class DroppedClip : Clip {}

class DroppedShotgun : WeaponGiver
{
	Default { DropItem "Shotgun"; Inventory.PickupMessage "$GOTSHOTGUN"; }
	States
	{
	Spawn:
		SHOT A -1;
		Stop;
	}
}

class FixedRLSpawner : WeaponGiver
{
	Default { DropItem "FixedRL"; Inventory.PickupMessage "$GOTLAUNCHER"; }
	States
	{
	Spawn:
		LAUN A -1;
		Stop;
	}
}

class FixedRL : RocketLauncher
{
	States
	{
	Fire:
		MISG B 8 A_GunFlash;
		MISG B 12 A_FireProjectile("FixedRocket");
		MISG B 0 A_ReFire;
		Goto Ready;
	}
}

class FixedRocket : Rocket {}
