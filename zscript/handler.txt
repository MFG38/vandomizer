class SpawningHandler : EventHandler
{
	override void CheckReplacement(ReplaceEvent e)
	{
		cvar mode = CVar.FindCVar('vd_spawnmode');
		
		switch(mode.GetInt())
		{
			case 0:		// Same-tier enemy and ammo spawns
				if(e.Replacee is 'ZombieMan' || e.Replacee is 'ShotgunGuy' || e.Replacee is 'ChaingunGuy' ||
				e.Replacee is 'DoomImp' || e.Replacee is 'LostSoul')
				{
					switch(random(0,4))
					{
					case 0:
						e.Replacement = 'ZombieMan';
						break;
					case 1:
						e.Replacement = 'ShotgunGuy';
						break;
					case 2:
						e.Replacement = 'ChaingunGuy';
						break;
					case 3:
						e.Replacement = 'DoomImp';
						break;
					case 4:
						e.Replacement = 'LostSoul';
						break;
					}
				}
					
				if(e.Replacee is 'Demon' || e.Replacee is 'Spectre' || e.Replacee is 'HellKnight' ||
				e.Replacee is 'Cacodemon' || e.Replacee is 'Revenant')
				{
					switch(random(0,4))
					{
					case 0:
						e.Replacement = 'Demon';
						break;
					case 1:
						e.Replacement = 'Spectre';
						break;
					case 2:
						e.Replacement = 'HellKnight';
						break;
					case 3:
						e.Replacement = 'Cacodemon';
						break;
					case 4:
						e.Replacement = 'Revenant';
						break;
					}
				}
					
				if(e.Replacee is 'Arachnotron' || e.Replacee is 'Archvile' || e.Replacee is 'BaronOfHell' ||
				e.Replacee is 'Fatso' || e.Replacee is 'PainElemental')
				{
					switch(random(0,4))
					{
					case 0:
						e.Replacement = 'Arachnotron';
						break;
					case 1:
						e.Replacement = 'Archvile';
						break;
					case 2:
						e.Replacement = 'BaronOfHell';
						break;
					case 3:
						e.Replacement = 'Fatso';
						break;
					case 4:
						e.Replacement = 'PainElemental';
						break;
					}
				}
					
				if(e.Replacee is 'Cyberdemon' || e.Replacee is 'SpiderMastermind')
				{
					switch(random(0,1))
					{
					case 0:
						e.Replacement = 'Cyberdemon';
						break;
					case 1:
						e.Replacement = 'SpiderMastermind';
						break;
					}
				}
				
				if(e.Replacee is 'Clip' ||e.Replacee is 'Shell' || e.Replacee is 'RocketAmmo' || e.Replacee is 'Cell')
				{
					switch(random(0,3))
					{
					case 0:
						e.Replacement = 'Clip';
						break;
					case 1:
						e.Replacement = 'Shell';
						break;
					case 2:
						e.Replacement = 'RocketAmmo';
						break;
					case 3:
						e.Replacement = 'Cell';
						break;
					}
				}
					
				if(e.Replacee is 'ClipBox' || e.Replacee is 'ShellBox' || e.Replacee is 'RocketBox' || e.Replacee is 'CellPack')
				{
					switch(random(0,3))
					{
					case 0:
						e.Replacement = 'ClipBox';
						break;
					case 1:
						e.Replacement = 'ShellBox';
						break;
					case 2:
						e.Replacement = 'RocketBox';
						break;
					case 3:
						e.Replacement = 'CellPack';
						break;
					}
				}
					
				if(e.Replacee is 'Chainsaw' || e.Replacee is 'Shotgun' || e.Replacee is 'SuperShotgun' || e.Replacee is 'Chaingun' ||
				e.Replacee is 'RocketLauncher' || e.Replacee is 'PlasmaRifle' || e.Replacee is 'BFG9000')
				{
					switch(random(0,6))
					{
					case 0:
						e.Replacement = 'Chainsaw';
						break;
					case 1:
						e.Replacement = 'Shotgun';
						break;
					case 2:
						e.Replacement = 'SuperShotgun';
						break;
					case 3:
						e.Replacement = 'Chaingun';
						break;
					case 4:
						e.Replacement = 'RocketLauncher';
						break;
					case 5:
						e.Replacement = 'PlasmaRifle';
						break;
					case 6:
						e.Replacement = 'BFG9000';
						break;
					}
				}
					
				if(e.Replacee is 'HealthBonus' || e.Replacee is 'Stimpack' || e.Replacee is 'Medikit')
				{
					switch(random(0,2))
					{
					case 0:
						e.Replacement = 'HealthBonus';
						break;
					case 1:
						e.Replacement = 'Stimpack';
						break;
					case 2:
						e.Replacement = 'Medikit';
						break;
					}
				}
					
				if(e.Replacee is 'ArmorBonus' || e.Replacee is 'GreenArmor' || e.Replacee is 'BlueArmor')
				{
					switch(random(0,2))
					{
					case 0:
						e.Replacement = 'ArmorBonus';
						break;
					case 1:
						e.Replacement = 'GreenArmor';
						break;
					case 2:
						e.Replacement = 'BlueArmor';
						break;
					}
				}
					
				if(e.Replacee is 'Allmap' || e.Replacee is 'BlurSphere' || e.Replacee is 'Berserk' || e.Replacee is 'Infrared' ||
				e.Replacee is 'InvulnerabilitySphere' || e.Replacee is 'RadSuit' || e.Replacee is 'Megasphere' || e.Replacee is 'Soulsphere')
				{
					switch(random(0,7))
					{
					case 0:
						e.Replacement = 'Allmap';
						break;
					case 1:
						e.Replacement = 'BlurSphere';
						break;
					case 2:
						e.Replacement = 'Berserk';
						break;
					case 3:
						e.Replacement = 'Infrared';
						break;
					case 4:
						e.Replacement = 'InvulnerabilitySphere';
						break;
					case 5:
						e.Replacement = 'RadSuit';
						break;
					case 6:
						e.Replacement = 'Megasphere';
						break;
					case 7:
						e.Replacement = 'Soulsphere';
						break;
					}
				}
					
				if(e.Replacee is 'BigTree' || e.Replacee is 'BlueTorch' || e.Replacee is 'Candelabra' || e.Replacee is 'Candlestick' ||
				e.Replacee is 'EvilEye' || e.Replacee is 'FloatingSkull' || e.Replacee is 'GreenTorch' || e.Replacee is 'HeadCandles' ||
				e.Replacee is 'HeadOnAStick' || e.Replacee is 'HeadsOnAStick' || e.Replacee is 'HeartColumn' || e.Replacee is 'RedTorch' ||
				e.Replacee is 'ShortBlueTorch' || e.Replacee is 'ShortGreenTorch' || e.Replacee is 'ShortRedTorch' || e.Replacee is 'ShortGreenColumn' ||
				e.Replacee is 'ShortRedColumn' || e.Replacee is 'SkullColumn' || e.Replacee is 'Stalagtite' || e.Replacee is 'TallGreenColumn' ||
				e.Replacee is 'TallRedColumn' || e.Replacee is 'TorchTree' || e.Replacee is 'DeadCacodemon' || e.Replacee is 'DeadDemon' ||
				e.Replacee is 'DeadDoomImp' || e.Replacee is 'DeadLostSoul' || e.Replacee is 'DeadMarine' || e.Replacee is 'DeadShotgunGuy' ||
				e.Replacee is 'DeadZombieMan' || e.Replacee is 'GibbedMarine' || e.Replacee is 'GibbedMarineExtra' || e.Replacee is 'Column' ||
				e.Replacee is 'ExplosiveBarrel' || e.Replacee is 'BurningBarrel' || e.Replacee is 'TechLamp' || e.Replacee is 'TechLamp2' ||
				e.Replacee is 'TechPillar' || e.Replacee is 'BloodyTwitch' || e.Replacee is 'BrainStem' || e.Replacee is 'ColonGibs' ||
				e.Replacee is 'DeadStick' || e.Replacee is 'Gibs' || e.Replacee is 'HangBNoBrain' || e.Replacee is 'HangNoGuts' ||
				e.Replacee is 'HangTLookingDown' || e.Replacee is 'HangTLookingUp' || e.Replacee is 'HangTNoBrain' || e.Replacee is 'HangTSkull' ||
				e.Replacee is 'LiveStick' || e.Replacee is 'Meat2' || e.Replacee is 'Meat3' || e.Replacee is 'Meat4' ||
				e.Replacee is 'Meat5' || e.Replacee is 'NonsolidMeat2' || e.Replacee is 'NonsolidMeat3' || e.Replacee is 'NonsolidMeat4' ||
				e.Replacee is 'NonsolidMeat5' || e.Replacee is 'NonsolidTwitch' || e.Replacee is 'SmallBloodPool')
				{
					switch(random(0,58))
					{
					case 0:
						e.Replacement = 'BigTree';
						break;
					case 1:
						e.Replacement = 'BlueTorch';
						break;
					case 2:
						e.Replacement = 'Candelabra';
						break;
					case 3:
						e.Replacement = 'Candlestick';
						break;
					case 4:
						e.Replacement = 'EvilEye';
						break;
					case 5:
						e.Replacement = 'FloatingSkull';
						break;
					case 6:
						e.Replacement = 'GreenTorch';
						break;
					case 7:
						e.Replacement = 'HeadCandles';
						break;
					case 8:
						e.Replacement = 'HeadOnAStick';
						break;
					case 9:
						e.Replacement = 'HeadsOnAStick';
						break;
					case 10:
						e.Replacement = 'HeartColumn';
						break;
					case 11:
						e.Replacement = 'RedTorch';
						break;
					case 12:
						e.Replacement = 'ShortBlueTorch';
						break;
					case 13:
						e.Replacement = 'ShortGreenTorch';
						break;
					case 14:
						e.Replacement = 'ShortRedTorch';
						break;
					case 15:
						e.Replacement = 'ShortGreenColumn';
						break;
					case 16:
						e.Replacement = 'ShortRedColumn';
						break;
					case 17:
						e.Replacement = 'SkullColumn';
						break;
					case 18:
						e.Replacement = 'Stalagtite';
						break;
					case 19:
						e.Replacement = 'TallGreenColumn';
						break;
					case 20:
						e.Replacement = 'TallRedColumn';
						break;
					case 21:
						e.Replacement = 'TorchTree';
						break;
					case 22:
						e.Replacement = 'DeadCacodemon';
						break;
					case 23:
						e.Replacement = 'DeadDemon';
						break;
					case 24:
						e.Replacement = 'DeadDoomImp';
						break;
					case 25:
						e.Replacement = 'DeadLostSoul';
						break;
					case 26:
						e.Replacement = 'DeadMarine';
						break;
					case 27:
						e.Replacement = 'DeadShotgunGuy';
						break;
					case 28:
						e.Replacement = 'DeadZombieMan';
						break;
					case 29:
						e.Replacement = 'GibbedMarine';
						break;
					case 30:
						e.Replacement = 'GibbedMarineExtra';
						break;
					case 31:
						e.Replacement = 'Column';
						break;
					case 32:
						e.Replacement = 'ExplosiveBarrel';
						break;
					case 33:
						e.Replacement = 'BurningBarrel';
						break;
					case 34:
						e.Replacement = 'TechLamp';
						break;
					case 35:
						e.Replacement = 'TechLamp2';
						break;
					case 36:
						e.Replacement = 'TechPillar';
						break;
					case 37:
						e.Replacement = 'BloodyTwitch';
						break;
					case 38:
						e.Replacement = 'BrainStem';
						break;
					case 39:
						e.Replacement = 'ColonGibs';
						break;
					case 40:
						e.Replacement = 'DeadStick';
						break;
					case 41:
						e.Replacement = 'Gibs';
						break;
					case 42:
						e.Replacement = 'HangBNoBrain';
						break;
					case 43:
						e.Replacement = 'HangNoGuts';
						break;
					case 44:
						e.Replacement = 'HangTLookingDown';
						break;
					case 45:
						e.Replacement = 'HangTLookingUp';
						break;
					case 46:
						e.Replacement = 'HangTNoBrain';
						break;
					case 47:
						e.Replacement = 'HangTSkull';
						break;
					case 48:
						e.Replacement = 'LiveStick';
						break;
					case 49:
						e.Replacement = 'Meat2';
						break;
					case 50:
						e.Replacement = 'Meat3';
						break;
					case 51:
						e.Replacement = 'Meat4';
						break;
					case 52:
						e.Replacement = 'Meat5';
						break;
					case 53:
						e.Replacement = 'NonsolidMeat2';
						break;
					case 54:
						e.Replacement = 'NonsolidMeat3';
						break;
					case 55:
						e.Replacement = 'NonsolidMeat4';
						break;
					case 56:
						e.Replacement = 'NonsolidMeat5';
						break;
					case 57:
						e.Replacement = 'NonsolidTwitch';
						break;
					case 58:
						e.Replacement = 'SmallBloodPool';
						break;
					}
				}
				
				break;
					
			case 1:		// Any enemy and ammo can spawn anywhere
				if(e.Replacee is 'ZombieMan' || e.Replacee is 'ShotgunGuy' || e.Replacee is 'ChaingunGuy' ||
				e.Replacee is 'DoomImp' || e.Replacee is 'LostSoul' ||
				e.Replacee is 'Demon' || e.Replacee is 'Spectre' || e.Replacee is 'HellKnight' ||
				e.Replacee is 'Cacodemon' || e.Replacee is 'Revenant' ||
				e.Replacee is 'Arachnotron' || e.Replacee is 'Archvile' || e.Replacee is 'BaronOfHell' ||
				e.Replacee is 'Fatso' || e.Replacee is 'PainElemental' ||
				e.Replacee is 'Cyberdemon' || e.Replacee is 'SpiderMastermind')
				{
					switch(random(0,16))
					{
					case 0:
						e.Replacement = 'ZombieMan';
						break;
					case 1:
						e.Replacement = 'ShotgunGuy';
						break;
					case 2:
						e.Replacement = 'ChaingunGuy';
						break;
					case 3:
						e.Replacement = 'DoomImp';
						break;
					case 4:
						e.Replacement = 'LostSoul';
						break;
					case 5:
						e.Replacement = 'Demon';
						break;
					case 6:
						e.Replacement = 'Spectre';
						break;
					case 7:
						e.Replacement = 'HellKnight';
						break;
					case 8:
						e.Replacement = 'Cacodemon';
						break;
					case 9:
						e.Replacement = 'Revenant';
						break;
					case 10:
						e.Replacement = 'Arachnotron';
						break;
					case 11:
						e.Replacement = 'Archvile';
						break;
					case 12:
						e.Replacement = 'BaronOfHell';
						break;
					case 13:
						e.Replacement = 'Fatso';
						break;
					case 14:
						e.Replacement = 'PainElemental';
						break;
					case 15:
						e.Replacement = 'Cyberdemon';
						break;
					case 16:
						e.Replacement = 'SpiderMastermind';
						break;
					}
				}
				
				if(e.Replacee is 'Clip' || e.Replacee is 'Shell' || e.Replacee is 'RocketAmmo' || e.Replacee is 'Cell' ||
				e.Replacee is 'ClipBox' || e.Replacee is 'ShellBox' || e.Replacee is 'RocketBox' || e.Replacee is 'CellPack' ||
				e.Replacee is 'Backpack')
				{
					switch(random(0,8))
					{
					case 0:
						e.Replacement = 'Clip';
						break;
					case 1:
						e.Replacement = 'Shell';
						break;
					case 2:
						e.Replacement = 'RocketAmmo';
						break;
					case 3:
						e.Replacement = 'Cell';
						break;
					case 4:
						e.Replacement = 'ClipBox';
						break;
					case 5:
						e.Replacement = 'ShellBox';
						break;
					case 6:
						e.Replacement = 'RocketBox';
						break;
					case 7:
						e.Replacement = 'CellPack';
						break;
					case 8:
						e.Replacement = 'Backpack';
						break;
					}
				}
				
				if(e.Replacee is 'Chainsaw' || e.Replacee is 'Shotgun' || e.Replacee is 'SuperShotgun' || e.Replacee is 'Chaingun' ||
				e.Replacee is 'RocketLauncher' || e.Replacee is 'PlasmaRifle' || e.Replacee is 'BFG9000')
				{
					switch(random(0,6))
					{
					case 0:
						e.Replacement = 'Chainsaw';
						break;
					case 1:
						e.Replacement = 'Shotgun';
						break;
					case 2:
						e.Replacement = 'SuperShotgun';
						break;
					case 3:
						e.Replacement = 'Chaingun';
						break;
					case 4:
						e.Replacement = 'RocketLauncher';
						break;
					case 5:
						e.Replacement = 'PlasmaRifle';
						break;
					case 6:
						e.Replacement = 'BFG9000';
						break;
					}
				}
					
				if(e.Replacee is 'HealthBonus' || e.Replacee is 'Stimpack' || e.Replacee is 'Medikit')
				{
					switch(random(0,2))
					{
					case 0:
						e.Replacement = 'HealthBonus';
						break;
					case 1:
						e.Replacement = 'Stimpack';
						break;
					case 2:
						e.Replacement = 'Medikit';
						break;
					}
				}
					
				if(e.Replacee is 'ArmorBonus' || e.Replacee is 'GreenArmor' || e.Replacee is 'BlueArmor')
				{
					switch(random(0,2))
					{
					case 0:
						e.Replacement = 'ArmorBonus';
						break;
					case 1:
						e.Replacement = 'GreenArmor';
						break;
					case 2:
						e.Replacement = 'BlueArmor';
						break;
					}
				}
					
				if(e.Replacee is 'Allmap' || e.Replacee is 'BlurSphere' || e.Replacee is 'Berserk' || e.Replacee is 'Infrared' ||
				e.Replacee is 'InvulnerabilitySphere' || e.Replacee is 'RadSuit' || e.Replacee is 'Megasphere' || e.Replacee is 'Soulsphere')
				{
					switch(random(0,7))
					{
					case 0:
						e.Replacement = 'Allmap';
						break;
					case 1:
						e.Replacement = 'BlurSphere';
						break;
					case 2:
						e.Replacement = 'Berserk';
						break;
					case 3:
						e.Replacement = 'Infrared';
						break;
					case 4:
						e.Replacement = 'InvulnerabilitySphere';
						break;
					case 5:
						e.Replacement = 'RadSuit';
						break;
					case 6:
						e.Replacement = 'Megasphere';
						break;
					case 7:
						e.Replacement = 'Soulsphere';
						break;
					}
				}
					
				if(e.Replacee is 'BigTree' || e.Replacee is 'BlueTorch' || e.Replacee is 'Candelabra' || e.Replacee is 'Candlestick' ||
				e.Replacee is 'EvilEye' || e.Replacee is 'FloatingSkull' || e.Replacee is 'GreenTorch' || e.Replacee is 'HeadCandles' ||
				e.Replacee is 'HeadOnAStick' || e.Replacee is 'HeadsOnAStick' || e.Replacee is 'HeartColumn' || e.Replacee is 'RedTorch' ||
				e.Replacee is 'ShortBlueTorch' || e.Replacee is 'ShortGreenTorch' || e.Replacee is 'ShortRedTorch' || e.Replacee is 'ShortGreenColumn' ||
				e.Replacee is 'ShortRedColumn' || e.Replacee is 'SkullColumn' || e.Replacee is 'Stalagtite' || e.Replacee is 'TallGreenColumn' ||
				e.Replacee is 'TallRedColumn' || e.Replacee is 'TorchTree' || e.Replacee is 'DeadCacodemon' || e.Replacee is 'DeadDemon' ||
				e.Replacee is 'DeadDoomImp' || e.Replacee is 'DeadLostSoul' || e.Replacee is 'DeadMarine' || e.Replacee is 'DeadShotgunGuy' ||
				e.Replacee is 'DeadZombieMan' || e.Replacee is 'GibbedMarine' || e.Replacee is 'GibbedMarineExtra' || e.Replacee is 'Column' ||
				e.Replacee is 'ExplosiveBarrel' || e.Replacee is 'BurningBarrel' || e.Replacee is 'TechLamp' || e.Replacee is 'TechLamp2' ||
				e.Replacee is 'TechPillar' || e.Replacee is 'BloodyTwitch' || e.Replacee is 'BrainStem' || e.Replacee is 'ColonGibs' ||
				e.Replacee is 'DeadStick' || e.Replacee is 'Gibs' || e.Replacee is 'HangBNoBrain' || e.Replacee is 'HangNoGuts' ||
				e.Replacee is 'HangTLookingDown' || e.Replacee is 'HangTLookingUp' || e.Replacee is 'HangTNoBrain' || e.Replacee is 'HangTSkull' ||
				e.Replacee is 'LiveStick' || e.Replacee is 'Meat2' || e.Replacee is 'Meat3' || e.Replacee is 'Meat4' ||
				e.Replacee is 'Meat5' || e.Replacee is 'NonsolidMeat2' || e.Replacee is 'NonsolidMeat3' || e.Replacee is 'NonsolidMeat4' ||
				e.Replacee is 'NonsolidMeat5' || e.Replacee is 'NonsolidTwitch' || e.Replacee is 'SmallBloodPool')
				{
					switch(random(0,58))
					{
					case 0:
						e.Replacement = 'BigTree';
						break;
					case 1:
						e.Replacement = 'BlueTorch';
						break;
					case 2:
						e.Replacement = 'Candelabra';
						break;
					case 3:
						e.Replacement = 'Candlestick';
						break;
					case 4:
						e.Replacement = 'EvilEye';
						break;
					case 5:
						e.Replacement = 'FloatingSkull';
						break;
					case 6:
						e.Replacement = 'GreenTorch';
						break;
					case 7:
						e.Replacement = 'HeadCandles';
						break;
					case 8:
						e.Replacement = 'HeadOnAStick';
						break;
					case 9:
						e.Replacement = 'HeadsOnAStick';
						break;
					case 10:
						e.Replacement = 'HeartColumn';
						break;
					case 11:
						e.Replacement = 'RedTorch';
						break;
					case 12:
						e.Replacement = 'ShortBlueTorch';
						break;
					case 13:
						e.Replacement = 'ShortGreenTorch';
						break;
					case 14:
						e.Replacement = 'ShortRedTorch';
						break;
					case 15:
						e.Replacement = 'ShortGreenColumn';
						break;
					case 16:
						e.Replacement = 'ShortRedColumn';
						break;
					case 17:
						e.Replacement = 'SkullColumn';
						break;
					case 18:
						e.Replacement = 'Stalagtite';
						break;
					case 19:
						e.Replacement = 'TallGreenColumn';
						break;
					case 20:
						e.Replacement = 'TallRedColumn';
						break;
					case 21:
						e.Replacement = 'TorchTree';
						break;
					case 22:
						e.Replacement = 'DeadCacodemon';
						break;
					case 23:
						e.Replacement = 'DeadDemon';
						break;
					case 24:
						e.Replacement = 'DeadDoomImp';
						break;
					case 25:
						e.Replacement = 'DeadLostSoul';
						break;
					case 26:
						e.Replacement = 'DeadMarine';
						break;
					case 27:
						e.Replacement = 'DeadShotgunGuy';
						break;
					case 28:
						e.Replacement = 'DeadZombieMan';
						break;
					case 29:
						e.Replacement = 'GibbedMarine';
						break;
					case 30:
						e.Replacement = 'GibbedMarineExtra';
						break;
					case 31:
						e.Replacement = 'Column';
						break;
					case 32:
						e.Replacement = 'ExplosiveBarrel';
						break;
					case 33:
						e.Replacement = 'BurningBarrel';
						break;
					case 34:
						e.Replacement = 'TechLamp';
						break;
					case 35:
						e.Replacement = 'TechLamp2';
						break;
					case 36:
						e.Replacement = 'TechPillar';
						break;
					case 37:
						e.Replacement = 'BloodyTwitch';
						break;
					case 38:
						e.Replacement = 'BrainStem';
						break;
					case 39:
						e.Replacement = 'ColonGibs';
						break;
					case 40:
						e.Replacement = 'DeadStick';
						break;
					case 41:
						e.Replacement = 'Gibs';
						break;
					case 42:
						e.Replacement = 'HangBNoBrain';
						break;
					case 43:
						e.Replacement = 'HangNoGuts';
						break;
					case 44:
						e.Replacement = 'HangTLookingDown';
						break;
					case 45:
						e.Replacement = 'HangTLookingUp';
						break;
					case 46:
						e.Replacement = 'HangTNoBrain';
						break;
					case 47:
						e.Replacement = 'HangTSkull';
						break;
					case 48:
						e.Replacement = 'LiveStick';
						break;
					case 49:
						e.Replacement = 'Meat2';
						break;
					case 50:
						e.Replacement = 'Meat3';
						break;
					case 51:
						e.Replacement = 'Meat4';
						break;
					case 52:
						e.Replacement = 'Meat5';
						break;
					case 53:
						e.Replacement = 'NonsolidMeat2';
						break;
					case 54:
						e.Replacement = 'NonsolidMeat3';
						break;
					case 55:
						e.Replacement = 'NonsolidMeat4';
						break;
					case 56:
						e.Replacement = 'NonsolidMeat5';
						break;
					case 57:
						e.Replacement = 'NonsolidTwitch';
						break;
					case 58:
						e.Replacement = 'SmallBloodPool';
						break;
					}
				}
				
				break;
				
			case 2:		// TOTAL FUCKIGN CHOAS (typos are intentional)
				if(e.Replacee is 'ZombieMan' || e.Replacee is 'ShotgunGuy' || e.Replacee is 'ChaingunGuy' ||
				e.Replacee is 'DoomImp' || e.Replacee is 'LostSoul' ||
				e.Replacee is 'Demon' || e.Replacee is 'Spectre' || e.Replacee is 'HellKnight' ||
				e.Replacee is 'Cacodemon' || e.Replacee is 'Revenant' ||
				e.Replacee is 'Arachnotron' || e.Replacee is 'Archvile' || e.Replacee is 'BaronOfHell' ||
				e.Replacee is 'Fatso' || e.Replacee is 'PainElemental' ||
				e.Replacee is 'Cyberdemon' || e.Replacee is 'SpiderMastermind' ||
				e.Replacee is 'Clip' || e.Replacee is 'Shell' || e.Replacee is 'RocketAmmo' || e.Replacee is 'Cell' ||
				e.Replacee is 'ClipBox' || e.Replacee is 'ShellBox' || e.Replacee is 'RocketBox' || e.Replacee is 'CellPack' ||
				e.Replacee is 'Backpack' ||
				e.Replacee is 'HealthBonus' || e.Replacee is 'Stimpack' || e.Replacee is 'Medikit' ||
				e.Replacee is 'ArmorBonus' || e.Replacee is 'GreenArmor' || e.Replacee is 'BlueArmor' ||
				e.Replacee is 'Allmap' || e.Replacee is 'BlurSphere' || e.Replacee is 'Berserk' || e.Replacee is 'Infrared' ||
				e.Replacee is 'InvulnerabilitySphere' || e.Replacee is 'RadSuit' || e.Replacee is 'Megasphere' || e.Replacee is 'Soulsphere' ||
				e.Replacee is 'BigTree' || e.Replacee is 'BlueTorch' || e.Replacee is 'Candelabra' || e.Replacee is 'Candlestick' ||
				e.Replacee is 'EvilEye' || e.Replacee is 'FloatingSkull' || e.Replacee is 'GreenTorch' || e.Replacee is 'HeadCandles' ||
				e.Replacee is 'HeadOnAStick' || e.Replacee is 'HeadsOnAStick' || e.Replacee is 'HeartColumn' || e.Replacee is 'RedTorch' ||
				e.Replacee is 'ShortBlueTorch' || e.Replacee is 'ShortGreenTorch' || e.Replacee is 'ShortRedTorch' || e.Replacee is 'ShortGreenColumn' ||
				e.Replacee is 'ShortRedColumn' || e.Replacee is 'SkullColumn' || e.Replacee is 'Stalagtite' || e.Replacee is 'TallGreenColumn' ||
				e.Replacee is 'TallRedColumn' || e.Replacee is 'TorchTree' || e.Replacee is 'DeadCacodemon' || e.Replacee is 'DeadDemon' ||
				e.Replacee is 'DeadDoomImp' || e.Replacee is 'DeadLostSoul' || e.Replacee is 'DeadMarine' || e.Replacee is 'DeadShotgunGuy' ||
				e.Replacee is 'DeadZombieMan' || e.Replacee is 'GibbedMarine' || e.Replacee is 'GibbedMarineExtra' || e.Replacee is 'Column' ||
				e.Replacee is 'ExplosiveBarrel' || e.Replacee is 'BurningBarrel' || e.Replacee is 'TechLamp' || e.Replacee is 'TechLamp2' ||
				e.Replacee is 'TechPillar' || e.Replacee is 'BloodyTwitch' || e.Replacee is 'BrainStem' || e.Replacee is 'ColonGibs' ||
				e.Replacee is 'DeadStick' || e.Replacee is 'Gibs' || e.Replacee is 'HangBNoBrain' || e.Replacee is 'HangNoGuts' ||
				e.Replacee is 'HangTLookingDown' || e.Replacee is 'HangTLookingUp' || e.Replacee is 'HangTNoBrain' || e.Replacee is 'HangTSkull' ||
				e.Replacee is 'LiveStick' || e.Replacee is 'Meat2' || e.Replacee is 'Meat3' || e.Replacee is 'Meat4' ||
				e.Replacee is 'Meat5' || e.Replacee is 'NonsolidMeat2' || e.Replacee is 'NonsolidMeat3' || e.Replacee is 'NonsolidMeat4' ||
				e.Replacee is 'NonsolidMeat5' || e.Replacee is 'NonsolidTwitch' || e.Replacee is 'SmallBloodPool')
				{
					switch(random(0,255))	// Holy shit.
					{
					case 0:
						e.Replacement = 'BigTree';
						break;
					case 1:
						e.Replacement = 'BlueTorch';
						break;
					case 2:
						e.Replacement = 'Candelabra';
						break;
					case 3:
						e.Replacement = 'Candlestick';
						break;
					case 4:
						e.Replacement = 'EvilEye';
						break;
					case 5:
						e.Replacement = 'FloatingSkull';
						break;
					case 6:
						e.Replacement = 'GreenTorch';
						break;
					case 7:
						e.Replacement = 'HeadCandles';
						break;
					case 8:
						e.Replacement = 'HeadOnAStick';
						break;
					case 9:
						e.Replacement = 'HeadsOnAStick';
						break;
					case 10:
						e.Replacement = 'HeartColumn';
						break;
					case 11:
						e.Replacement = 'RedTorch';
						break;
					case 12:
						e.Replacement = 'ShortBlueTorch';
						break;
					case 13:
						e.Replacement = 'ShortGreenTorch';
						break;
					case 14:
						e.Replacement = 'ShortRedTorch';
						break;
					case 15:
						e.Replacement = 'ShortGreenColumn';
						break;
					case 16:
						e.Replacement = 'ShortRedColumn';
						break;
					case 17:
						e.Replacement = 'SkullColumn';
						break;
					case 18:
						e.Replacement = 'Stalagtite';
						break;
					case 19:
						e.Replacement = 'TallGreenColumn';
						break;
					case 20:
						e.Replacement = 'TallRedColumn';
						break;
					case 21:
						e.Replacement = 'TorchTree';
						break;
					case 22:
						e.Replacement = 'DeadCacodemon';
						break;
					case 23:
						e.Replacement = 'DeadDemon';
						break;
					case 24:
						e.Replacement = 'DeadDoomImp';
						break;
					case 25:
						e.Replacement = 'DeadLostSoul';
						break;
					case 26:
						e.Replacement = 'DeadMarine';
						break;
					case 27:
						e.Replacement = 'DeadShotgunGuy';
						break;
					case 28:
						e.Replacement = 'DeadZombieMan';
						break;
					case 29:
						e.Replacement = 'GibbedMarine';
						break;
					case 30:
						e.Replacement = 'GibbedMarineExtra';
						break;
					case 31:
						e.Replacement = 'Column';
						break;
					case 32:
						e.Replacement = 'ExplosiveBarrel';
						break;
					case 33:
						e.Replacement = 'BurningBarrel';
						break;
					case 34:
						e.Replacement = 'TechLamp';
						break;
					case 35:
						e.Replacement = 'TechLamp2';
						break;
					case 36:
						e.Replacement = 'TechPillar';
						break;
					case 37:
						e.Replacement = 'BloodyTwitch';
						break;
					case 38:
						e.Replacement = 'BrainStem';
						break;
					case 39:
						e.Replacement = 'ColonGibs';
						break;
					case 40:
						e.Replacement = 'DeadStick';
						break;
					case 41:
						e.Replacement = 'Gibs';
						break;
					case 42:
						e.Replacement = 'HangBNoBrain';
						break;
					case 43:
						e.Replacement = 'HangNoGuts';
						break;
					case 44:
						e.Replacement = 'HangTLookingDown';
						break;
					case 45:
						e.Replacement = 'HangTLookingUp';
						break;
					case 46:
						e.Replacement = 'HangTNoBrain';
						break;
					case 47:
						e.Replacement = 'HangTSkull';
						break;
					case 48:
						e.Replacement = 'LiveStick';
						break;
					case 49:
						e.Replacement = 'Meat2';
						break;
					case 50:
						e.Replacement = 'Meat3';
						break;
					case 51:
						e.Replacement = 'Meat4';
						break;
					case 52:
						e.Replacement = 'Meat5';
						break;
					case 53:
						e.Replacement = 'NonsolidMeat2';
						break;
					case 54:
						e.Replacement = 'NonsolidMeat3';
						break;
					case 55:
						e.Replacement = 'NonsolidMeat4';
						break;
					case 56:
						e.Replacement = 'NonsolidMeat5';
						break;
					case 57:
						e.Replacement = 'NonsolidTwitch';
						break;
					case 58:
						e.Replacement = 'SmallBloodPool';
						break;
					case 59:
					case 60:
					case 61:
					case 62:
					case 63:
					case 64:
					case 65:
					case 66:
					case 67:
					case 68:
						e.Replacement = 'ZombieMan';
						break;
					case 69:	// Heh.
					case 70:
					case 71:
					case 72:
					case 73:
					case 74:
					case 75:
					case 76:
					case 77:
					case 78:
						e.Replacement = 'ShotgunGuy';
						break;
					case 79:
					case 80:
					case 81:
					case 82:
					case 83:
					case 84:
					case 85:
					case 86:
					case 87:
					case 88:
						e.Replacement = 'ChaingunGuy';
						break;
					case 89:
					case 90:
					case 91:
					case 92:
					case 93:
					case 94:
					case 95:
					case 96:
					case 97:
					case 98:
						e.Replacement = 'DoomImp';
						break;
					case 99:
					case 100:
					case 101:
					case 102:
					case 103:
					case 104:
					case 105:
					case 106:
					case 107:
					case 108:
						e.Replacement = 'LostSoul';
						break;
					case 109:
					case 110:
					case 111:
					case 112:
					case 113:
					case 114:
					case 115:
					case 116:
					case 117:
					case 118:
						e.Replacement = 'Demon';
						break;
					case 119:
					case 120:
					case 121:
					case 122:
					case 123:
					case 124:
					case 125:
					case 126:
					case 127:
					case 128:
						e.Replacement = 'Spectre';
						break;
					case 129:
					case 130:
					case 131:
					case 132:
					case 133:
					case 134:
					case 135:
					case 136:
					case 137:
					case 138:
						e.Replacement = 'HellKnight';
						break;
					case 139:
					case 140:
					case 141:
					case 142:
					case 143:
					case 144:
					case 145:
					case 146:
					case 147:
					case 148:
						e.Replacement = 'Cacodemon';
						break;
					case 149:
					case 150:
					case 151:
					case 152:
					case 153:
					case 154:
					case 155:
					case 156:
					case 157:
					case 158:
						e.Replacement = 'Revenant';
						break;
					case 159:
					case 160:
					case 161:
					case 162:
					case 163:
					case 164:
					case 165:
					case 166:
					case 167:
					case 168:
						e.Replacement = 'Arachnotron';
						break;
					case 169:
					case 170:
					case 171:
					case 172:
					case 173:
					case 174:
					case 175:
					case 176:
					case 177:
					case 178:
						e.Replacement = 'Archvile';
						break;
					case 179:
					case 180:
					case 181:
					case 182:
					case 183:
					case 184:
					case 185:
					case 186:
					case 187:
					case 188:
						e.Replacement = 'BaronOfHell';
						break;
					case 189:
					case 190:
					case 191:
					case 192:
					case 193:
					case 194:
					case 195:
					case 196:
					case 197:
					case 198:
						e.Replacement = 'Fatso';
						break;
					case 199:
					case 200:
					case 201:
					case 202:
					case 203:
					case 204:
					case 205:
					case 206:
					case 207:
					case 208:
						e.Replacement = 'PainElemental';
						break;
					case 209:
					case 210:
					case 211:
					case 212:
						e.Replacement = 'Cyberdemon';
						break;
					case 213:
					case 214:
					case 215:
					case 216:
						e.Replacement = 'SpiderMastermind';
						break;
					case 217:
					case 218:
						e.Replacement = 'Clip';
						break;
					case 219:
					case 220:
						e.Replacement = 'Shell';
						break;
					case 221:
					case 222:
						e.Replacement = 'RocketAmmo';
						break;
					case 223:
					case 224:
						e.Replacement = 'Cell';
						break;
					case 225:
					case 226:
						e.Replacement = 'ClipBox';
						break;
					case 227:
					case 228:
						e.Replacement = 'ShellBox';
						break;
					case 229:
					case 230:
						e.Replacement = 'RocketBox';
						break;
					case 231:
					case 232:
						e.Replacement = 'CellPack';
						break;
					case 233:
					case 234:
						e.Replacement = 'Backpack';
						break;
					case 235:
						e.Replacement = 'Chainsaw';
						break;
					case 236:
						e.Replacement = 'Shotgun';
						break;
					case 237:
						e.Replacement = 'SuperShotgun';
						break;
					case 238:
						e.Replacement = 'Chaingun';
						break;
					case 239:
						e.Replacement = 'RocketLauncher';
						break;
					case 240:
						e.Replacement = 'PlasmaRifle';
						break;
					case 241:
						e.Replacement = 'BFG9000';
						break;
					case 242:
						e.Replacement = 'HealthBonus';
						break;
					case 243:
						e.Replacement = 'Stimpack';
						break;
					case 244:
						e.Replacement = 'Medikit';
						break;
					case 245:
						e.Replacement = 'ArmorBonus';
						break;
					case 246:
						e.Replacement = 'GreenArmor';
						break;
					case 247:
						e.Replacement = 'BlueArmor';
						break;
					case 248:
						e.Replacement = 'Allmap';
						break;
					case 249:
						e.Replacement = 'BlurSphere';
						break;
					case 250:
						e.Replacement = 'Berserk';
						break;
					case 251:
						e.Replacement = 'Infrared';
						break;
					case 252:
						e.Replacement = 'InvulnerabilitySphere';
						break;
					case 253:
						e.Replacement = 'RadSuit';
						break;
					case 254:
						e.Replacement = 'Megasphere';
						break;
					case 255:
						e.Replacement = 'Soulsphere';
						break;
					}
				}
				
				break;
		}
	}
}
